<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.abcmart.bo.member.repository.master.MbMemberLoginHistoryDao">

    <!--
    	※ 경고
		이 select SQL은  Code Generator를 통하여 생성 되었습니다.
     	기본 쿼리 이고 수시로 변경 될 소지가 있기 떄문에 Generator로 변경 하는 것이 아닌 직접 수정은 하지 마십시요.
     	
    -->
    
    <sql id="select-columns">
    	login_hist_seq, member_no, member_type_code, mbshp_grade_code, emp_yn, ots_vip_yn, site_no, sns_gbn_code, device_code, access_ip_text, session_id, pswd_error_count, cnnctr_stat_code, cnnctr_dtm
    </sql>
    
    <sql id="pk-columns">
    	login_hist_seq = #{loginHistSeq, jdbcType=INTEGER}
    </sql>
    
    <select id="select" parameterType="kr.co.abcmart.bo.member.model.master.MbMemberLoginHistory" resultType="kr.co.abcmart.bo.member.model.master.MbMemberLoginHistory">
    
     /*+ kr.co.abcmart.bo.member.repository.master.MbMemberLoginHistoryDao.select [기본 조회 쿼리] [Generator] */
    
		SELECT 
			 <include refid="select-columns" />
		FROM 
			mb_member_login_history WITH (NOLOCK)

		<where> 
			<if test="loginHistSeq != null"> 
				 login_hist_seq = #{loginHistSeq, jdbcType=INTEGER}
			</if> 
			<if test="memberNo != null"> 
				 AND member_no = #{memberNo, jdbcType=VARCHAR}
			</if> 
			<if test="memberTypeCode != null"> 
				 AND member_type_code = #{memberTypeCode, jdbcType=VARCHAR}
			</if> 
			<if test="mbshpGradeCode != null"> 
				 AND mbshp_grade_code = #{mbshpGradeCode, jdbcType=VARCHAR}
			</if> 
			<if test="empYn != null"> 
				 AND emp_yn = #{empYn, jdbcType=CHAR}
			</if> 
			<if test="otsVipYn != null"> 
				 AND ots_vip_yn = #{otsVipYn, jdbcType=CHAR}
			</if> 
			<if test="siteNo != null"> 
				 AND site_no = #{siteNo, jdbcType=VARCHAR}
			</if> 
			<if test="snsGbnCode != null"> 
				 AND sns_gbn_code = #{snsGbnCode, jdbcType=VARCHAR}
			</if> 
			<if test="deviceCode != null"> 
				 AND device_code = #{deviceCode, jdbcType=VARCHAR}
			</if> 
			<if test="accessIpText != null"> 
				 AND access_ip_text = #{accessIpText, jdbcType=VARCHAR}
			</if> 
			<if test="sessionId != null"> 
				 AND session_id = #{sessionId, jdbcType=VARCHAR}
			</if> 
			<if test="pswdErrorCount != null"> 
				 AND pswd_error_count = #{pswdErrorCount, jdbcType=INTEGER}
			</if> 
			<if test="cnnctrStatCode != null"> 
				 AND cnnctr_stat_code = #{cnnctrStatCode, jdbcType=VARCHAR}
			</if> 
			<if test="cnnctrDtm != null"> 
				 AND cnnctr_dtm = #{cnnctrDtm, jdbcType=TIMESTAMP}
			</if> 
		</where>  
    </select>
    
    <!--
    	※ 경고
		이 insert SQL은  Code Generator를 통하여 생성 되었습니다.
     	기본 쿼리 이고 수시로 변경 될 소지가 있기 떄문에 Generator로 변경 하는 것이 아닌 직접 수정은 하지 마십시요.
     	
    -->
    
	<insert id="insert" useGeneratedKeys="true" keyProperty="loginHistSeq">

     /*+ kr.co.abcmart.bo.member.repository.master.MbMemberLoginHistoryDao.insert [기본 insert 쿼리] [Generator] */
    
		INSERT INTO mb_member_login_history
			 ( member_no, member_type_code, mbshp_grade_code, emp_yn, ots_vip_yn, site_no, sns_gbn_code, device_code, access_ip_text, session_id, pswd_error_count, cnnctr_stat_code, cnnctr_dtm ) 

		VALUES 
			 ( #{memberNo, jdbcType=VARCHAR}, #{memberTypeCode, jdbcType=VARCHAR}, #{mbshpGradeCode, jdbcType=VARCHAR}, #{empYn, jdbcType=CHAR}, #{otsVipYn, jdbcType=CHAR}, #{siteNo, jdbcType=VARCHAR}, #{snsGbnCode, jdbcType=VARCHAR}, #{deviceCode, jdbcType=VARCHAR}, #{accessIpText, jdbcType=VARCHAR}, #{sessionId, jdbcType=VARCHAR}, #{pswdErrorCount, jdbcType=INTEGER}, #{cnnctrStatCode, jdbcType=VARCHAR}, <choose><when test="cnnctrDtm != null">#{cnnctrDtm, jdbcType=TIMESTAMP}</when><otherwise>getdate()</otherwise></choose> )  
    </insert>
    
    <!--
    	※ 경고
		이 update SQL은  Code Generator를 통하여 생성 되었습니다.
     	기본 쿼리 이고 수시로 변경 될 소지가 있기 떄문에 Generator로 변경 하는 것이 아닌 직접 수정은 하지 마십시요.
     	
    -->
    <update id="update" parameterType="kr.co.abcmart.bo.member.model.master.MbMemberLoginHistory">
    
     /*+ kr.co.abcmart.bo.member.repository.master.MbMemberLoginHistoryDao.update [기본 update 쿼리] [Generator] */
    
		UPDATE mb_member_login_history
		<set> 
			<if test="loginHistSeq != null"> 
				login_hist_seq = #{loginHistSeq, jdbcType=INTEGER}, 
			</if> 
			<if test="memberNo != null"> 
				member_no = #{memberNo, jdbcType=VARCHAR}, 
			</if> 
			<if test="memberTypeCode != null"> 
				member_type_code = #{memberTypeCode, jdbcType=VARCHAR}, 
			</if> 
			<if test="mbshpGradeCode != null"> 
				mbshp_grade_code = #{mbshpGradeCode, jdbcType=VARCHAR}, 
			</if> 
			<if test="empYn != null"> 
				emp_yn = #{empYn, jdbcType=CHAR}, 
			</if> 
			<if test="otsVipYn != null"> 
				ots_vip_yn = #{otsVipYn, jdbcType=CHAR}, 
			</if> 
			<if test="siteNo != null"> 
				site_no = #{siteNo, jdbcType=VARCHAR}, 
			</if> 
			<if test="snsGbnCode != null"> 
				sns_gbn_code = #{snsGbnCode, jdbcType=VARCHAR}, 
			</if> 
			<if test="deviceCode != null"> 
				device_code = #{deviceCode, jdbcType=VARCHAR}, 
			</if> 
			<if test="accessIpText != null"> 
				access_ip_text = #{accessIpText, jdbcType=VARCHAR}, 
			</if> 
			<if test="sessionId != null"> 
				session_id = #{sessionId, jdbcType=VARCHAR}, 
			</if> 
			<if test="pswdErrorCount != null"> 
				pswd_error_count = #{pswdErrorCount, jdbcType=INTEGER}, 
			</if> 
			<if test="cnnctrStatCode != null"> 
				cnnctr_stat_code = #{cnnctrStatCode, jdbcType=VARCHAR}, 
			</if> 
			<if test="cnnctrDtm != null"> 
				cnnctr_dtm = #{cnnctrDtm, jdbcType=TIMESTAMP}, 
			</if> 
		</set> 
		WHERE 
			 login_hist_seq = #{loginHistSeq, jdbcType=INTEGER}   
    </update>
    
    <!--
    	※ 경고
		이 delete SQL은  Code Generator를 통하여 생성 되었습니다.
     	기본 쿼리 이고 수시로 변경 될 소지가 있기 떄문에 Generator로 변경 하는 것이 아닌 직접 수정은 하지 마십시요.
     	
    -->
    <delete id="delete" parameterType="kr.co.abcmart.bo.member.model.master.MbMemberLoginHistory">
    
     /*+ kr.co.abcmart.bo.member.repository.master.MbMemberLoginHistoryDao.delete [기본 delete 쿼리] [Generator] */
    
		DELETE FROM mb_member_login_history
		WHERE 
			 login_hist_seq = #{loginHistSeq, jdbcType=INTEGER}  
    </delete>
</mapper>